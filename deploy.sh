#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–µ–ø–ª–æ—è Side-by-Side Voting

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ Side-by-Side Voting Deployment Script${NC}"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Ansible
if ! command -v ansible-playbook &> /dev/null; then
    echo -e "${RED}‚ùå Ansible –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install ansible${NC}"
    exit 1
fi

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${YELLOW}üì¶ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
npm run build

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è Ansible
ANSIBLE_ARGS=""
DEPLOY_MODE="ansible"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
while [[ $# -gt 0 ]]; do
    case $1 in
        --bootstrap)
            echo -e "${YELLOW}üîß –ó–∞–ø—É—Å–∫ bootstrap...${NC}"
            ansible-playbook -i ansible/inventory.ini ansible/bootstrap.yml
            if [ $? -eq 0 ]; then
                echo -e "${GREEN}‚úÖ Bootstrap –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
                echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å /etc/side-by-side/server.env –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ${NC}"
            else
                echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ bootstrap${NC}"
                exit 1
            fi
            shift
            ;;
        --docker)
            DEPLOY_MODE="docker"
            echo -e "${BLUE}üê≥ –†–µ–∂–∏–º Docker —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è${NC}"
            shift
            ;;
        --restart)
            ANSIBLE_ARGS="$ANSIBLE_ARGS -e restart_service=true"
            shift
            ;;
        --update-env)
            ANSIBLE_ARGS="$ANSIBLE_ARGS -e update_env=true"
            shift
            ;;
        --help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–û–ø—Ü–∏–∏:"
            echo "  --bootstrap     –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–µ—Ä–≤–µ—Ä–∞"
            echo "  --docker        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Docker —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
            echo "  --restart       –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è"
            echo "  --update-env    –û–±–Ω–æ–≤–∏—Ç—å env —Ñ–∞–π–ª —Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ .env.production"
            echo "  --help          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  $0 --bootstrap                    # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
            echo "  $0 --docker                       # Docker —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
            echo "  $0 --restart                      # –î–µ–ø–ª–æ–π —Å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º"
            echo "  $0 --restart --update-env         # –î–µ–ø–ª–æ–π —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º env –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1${NC}"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

# –ï—Å–ª–∏ –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω bootstrap, –¥–µ–ª–∞–µ–º –¥–µ–ø–ª–æ–π
if [[ "$ANSIBLE_ARGS" != *"--bootstrap"* ]]; then
    if [ "$DEPLOY_MODE" = "docker" ]; then
        echo -e "${BLUE}üê≥ Docker —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ...${NC}"
        ansible-playbook -i ansible/inventory.ini ansible/deploy-docker.yml $ANSIBLE_ARGS
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}‚úÖ Docker –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
            echo -e "${YELLOW}üìù –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:${NC}"
            echo -e "${YELLOW}   ssh root@your-server 'cd /opt/side-by-side/compose && docker compose run --rm certbot certonly --webroot --webroot-path=/var/www/certbot --email your@email.com --agree-tos --no-eff-email -d your-domain.com'${NC}"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ Docker –¥–µ–ø–ª–æ—è${NC}"
            exit 1
        fi
    else
        echo -e "${YELLOW}üöÄ Ansible —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ...${NC}"
        ansible-playbook -i ansible/inventory.ini ansible/deploy.yml $ANSIBLE_ARGS
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}‚úÖ Ansible –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ Ansible –¥–µ–ø–ª–æ—è${NC}"
            exit 1
        fi
    fi
fi

echo -e "${GREEN}üéâ –ì–æ—Ç–æ–≤–æ!${NC}"
