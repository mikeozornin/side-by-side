// –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª—ã –ü–ï–†–í–´–ú –î–ï–õ–û–ú
import './load-env.js';

import { router } from './routes/index.js';
import { initDatabase, closeDatabase } from './db/init.js';
import { ensureDirectories } from './utils/files.js';
import { logger } from './utils/logger.js';
import { cleanupExpiredAuthData } from './db/auth-queries.js';
import { startCleanupScheduler, stopCleanupScheduler } from './utils/cleanup-scheduler.js';
import { readFileSync } from 'fs';
import { resolve } from 'path';

const PORT = parseInt(process.env.PORT || '3000');
const DATA_DIR = process.env.DATA_DIR || './data';
const LOG_DIR = process.env.LOG_DIR || './logs';

async function startServer() {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    await ensureDirectories(DATA_DIR, LOG_DIR);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await initDatabase();

    // –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    logger.info('üßπ –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∏—Å—Ç–µ–∫—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
    const cleanupResult = await cleanupExpiredAuthData();
    if (cleanupResult.total > 0) {
      logger.info(`üóëÔ∏è  –û—á–∏—â–µ–Ω–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: ${cleanupResult.total} –∑–∞–ø–∏—Å–µ–π`);
    }

    // –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏
    startCleanupScheduler();

    logger.info(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Bun.serve
    Bun.serve({
      port: PORT,
      fetch: router.fetch,
    });

    logger.info(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    logger.info(`üîÑ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—á–∏—Å—Ç–∫–∏ –∞–∫—Ç–∏–≤–µ–Ω (–∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞)`);
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  logger.info('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  stopCleanupScheduler();
  closeDatabase();
  process.exit(0);
});

process.on('SIGTERM', () => {
  logger.info('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  stopCleanupScheduler();
  closeDatabase();
  process.exit(0);
});

startServer();
