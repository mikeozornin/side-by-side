# Side-by-Side Docker Compose Environment Variables
# Copy this file to .env and fill in your values

# =============================================================================
# DOCKER IMAGE CONFIGURATION
# =============================================================================

# Docker image registry (Docker Hub: mikeozornin, GHCR: ghcr.io/mikeozornin)
IMAGE_REGISTRY=docker.io/mikeozornin

# Docker image tag (latest, v1.0.0, etc.)
IMAGE_TAG=latest

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Application URLs
BASE_URL=http://localhost
CLIENT_URL=http://localhost

# JWT Secret (REQUIRED - generate a strong secret)
JWT_SECRET=your-super-secret-jwt-key-here-change-this-in-production

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database provider: "sqlite" or "postgres"
DB_PROVIDER=sqlite

# For SQLite (default)
DB_PATH=/var/app/state/app.db

# For PostgreSQL (when using postgres profile)
# Uncomment and configure if using postgres profile
# DATABASE_URL=postgres://sideuser:sidepass@postgres:5432/sidebyside
# POSTGRES_DB=sidebyside
# POSTGRES_USER=sideuser
# POSTGRES_PASSWORD=sidepass

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Storage driver: "local" or "s3"
STORAGE_DRIVER=local

# For S3 storage (optional)
# Uncomment and configure if using S3
# S3_ENDPOINT=https://s3.amazonaws.com
# S3_REGION=us-east-1
# S3_BUCKET=your-bucket-name
# S3_ACCESS_KEY_ID=your-access-key
# S3_SECRET_ACCESS_KEY=your-secret-key
# S3_FORCE_PATH_STYLE=false

# For MinIO (S3-compatible)
# S3_ENDPOINT=http://your-minio-server:9000
# S3_REGION=us-east-1
# S3_BUCKET=side-by-side
# S3_ACCESS_KEY_ID=minioadmin
# S3_SECRET_ACCESS_KEY=minioadmin
# S3_FORCE_PATH_STYLE=true

# =============================================================================
# AUTHENTICATION CONFIGURATION
# =============================================================================

# Authentication mode: "anonymous" or "magic-links"
AUTH_MODE=magic-links

# Auto-approve sessions (skip email verification)
AUTO_APPROVE_SESSIONS=false

# =============================================================================
# EMAIL CONFIGURATION (for magic-links)
# =============================================================================

# SMTP settings (required for magic-links)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=
SMTP_FROM_EMAIL=noreply@your-domain.com

# =============================================================================
# WEB PUSH NOTIFICATIONS (optional)
# =============================================================================

# Enable web push notifications
WEB_PUSH_ENABLED=false

# VAPID keys for web push (generate with: npx web-push generate-vapid-keys)
VAPID_PUBLIC_KEY=
VAPID_PRIVATE_KEY=
VAPID_EMAIL=mailto:admin@your-domain.com

# =============================================================================
# CLIENT CONFIGURATION
# =============================================================================

# Client-side API URL (usually /api)
VITE_API_URL=/api

# Client-side base URL
VITE_CLIENT_URL=http://localhost

# =============================================================================
# PRODUCTION NOTES
# =============================================================================

# 1. Always change JWT_SECRET in production
# 2. Use strong passwords for PostgreSQL
# 3. Configure proper SMTP settings for magic-links
# 4. Set up proper S3 credentials if using S3 storage
# 5. Configure proper domain names for BASE_URL and CLIENT_URL
# 6. Enable HTTPS in production (configure nginx with SSL certificates)

